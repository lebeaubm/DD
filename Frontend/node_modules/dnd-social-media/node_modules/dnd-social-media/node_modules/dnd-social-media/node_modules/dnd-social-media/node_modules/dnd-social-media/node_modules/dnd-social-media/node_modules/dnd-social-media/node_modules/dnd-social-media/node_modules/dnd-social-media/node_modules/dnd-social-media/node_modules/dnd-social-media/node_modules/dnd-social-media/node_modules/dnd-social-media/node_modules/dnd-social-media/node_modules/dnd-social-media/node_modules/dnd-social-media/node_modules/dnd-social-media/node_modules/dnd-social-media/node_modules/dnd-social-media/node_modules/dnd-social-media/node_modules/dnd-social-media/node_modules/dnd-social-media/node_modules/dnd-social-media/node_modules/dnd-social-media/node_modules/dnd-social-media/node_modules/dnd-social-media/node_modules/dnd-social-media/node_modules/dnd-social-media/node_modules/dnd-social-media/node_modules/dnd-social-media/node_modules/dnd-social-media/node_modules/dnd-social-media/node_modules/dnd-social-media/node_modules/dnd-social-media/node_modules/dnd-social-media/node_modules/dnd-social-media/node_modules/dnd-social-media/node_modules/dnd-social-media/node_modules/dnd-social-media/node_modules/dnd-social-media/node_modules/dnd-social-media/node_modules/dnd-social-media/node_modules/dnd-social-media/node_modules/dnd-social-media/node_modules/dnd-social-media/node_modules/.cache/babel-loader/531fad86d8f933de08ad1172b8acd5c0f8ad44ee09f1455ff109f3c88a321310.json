{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lebea\\\\OneDrive\\\\Desktop\\\\gitt\\\\java\\\\DND\\\\Frontend\\\\src\\\\pages\\\\CharacterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CharacterForm from '../components/CharacterForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CharacterPage() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n\n  // Function to fetch existing characters from the backend\n  const fetchCharacters = async () => {\n    try {\n      const response = await fetch('http://localhost:8081/api/characters/user/testUser'); // Replace 'testUser' with the logged-in username dynamically\n      if (!response.ok) {\n        throw new Error('Failed to fetch characters');\n      }\n      const data = await response.json();\n      setCharacters(data);\n    } catch (error) {\n      console.error('Failed to fetch characters:', error);\n    }\n  };\n\n  // Fetch characters when the component mounts\n  useEffect(() => {\n    fetchCharacters();\n  }, []);\n  const handleCharacterCreated = newCharacter => {\n    // Append the newly created character to the existing list\n    setCharacters([...characters, newCharacter]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Character Creation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CharacterForm, {\n      onCharacterCreated: handleCharacterCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Character List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: characters.map(character => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [character.name, \" - \", character.race, \" - \", character.charClass, \" - Level \", character.level]\n        }, character.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(CharacterPage, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = CharacterPage;\nexport default CharacterPage;\nvar _c;\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"names":["React","useEffect","useState","CharacterForm","jsxDEV","_jsxDEV","CharacterPage","_s","characters","setCharacters","fetchCharacters","response","fetch","ok","Error","data","json","error","console","handleCharacterCreated","newCharacter","children","fileName","_jsxFileName","lineNumber","columnNumber","onCharacterCreated","map","character","name","race","charClass","level","id","_c","$RefreshReg$"],"sources":["C:/Users/lebea/OneDrive/Desktop/gitt/java/DND/Frontend/src/pages/CharacterPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CharacterForm from '../components/CharacterForm';\r\n\r\nfunction CharacterPage() {\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  // Function to fetch existing characters from the backend\r\n  const fetchCharacters = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8081/api/characters/user/testUser'); // Replace 'testUser' with the logged-in username dynamically\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch characters');\r\n      }\r\n      const data = await response.json();\r\n      setCharacters(data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch characters:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch characters when the component mounts\r\n  useEffect(() => {\r\n    fetchCharacters();\r\n  }, []);\r\n\r\n  const handleCharacterCreated = (newCharacter) => {\r\n    // Append the newly created character to the existing list\r\n    setCharacters([...characters, newCharacter]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Character Creation</h1>\r\n      <CharacterForm onCharacterCreated={handleCharacterCreated} />\r\n      <div>\r\n        <h2>Character List</h2>\r\n        <ul>\r\n          {characters.map((character) => (\r\n            <li key={character.id}>\r\n              {character.name} - {character.race} - {character.charClass} - Level {character.level}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterPage;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoD,CAAC,CAAC,CAAC;MACpF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,aAAa,CAACM,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACdS,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,sBAAsB,GAAIC,YAAY,IAAK;IAC/C;IACAX,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEY,YAAY,CAAC,CAAC;EAC9C,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BpB,OAAA,CAACF,aAAa;MAACuB,kBAAkB,EAAEP;IAAuB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBpB,OAAA;QAAAgB,QAAA,EACGb,UAAU,CAACmB,GAAG,CAAEC,SAAS,iBACxBvB,OAAA;UAAAgB,QAAA,GACGO,SAAS,CAACC,IAAI,EAAC,KAAG,EAACD,SAAS,CAACE,IAAI,EAAC,KAAG,EAACF,SAAS,CAACG,SAAS,EAAC,WAAS,EAACH,SAAS,CAACI,KAAK;QAAA,GAD7EJ,SAAS,CAACK,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CA3CQD,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AA6CtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}