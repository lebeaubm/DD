{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lebea\\\\OneDrive\\\\Desktop\\\\gitt\\\\java\\\\DND\\\\Frontend\\\\src\\\\components\\\\CharacterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CharacterForm({\n  onCharacterCreated\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [race, setRace] = useState('');\n  const [charClass, setCharClass] = useState('');\n  const [level, setLevel] = useState(1);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const characterData = {\n      name: name,\n      race: race,\n      charClass: charClass,\n      level: parseInt(level),\n      username: \"testUser\" // You can replace this with a dynamic username later\n    };\n    try {\n      const response = await fetch('http://localhost:8081/api/characters/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(characterData)\n      });\n      if (response.ok) {\n        const newCharacter = await response.json();\n        console.log('Character created:', newCharacter);\n        if (onCharacterCreated) {\n          onCharacterCreated(newCharacter); // Callback to update character list if necessary\n        }\n      } else {\n        console.error('Failed to create character:', response.status);\n      }\n    } catch (error) {\n      console.error('Error creating character:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Race:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: race,\n        onChange: e => setRace(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Class:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: charClass,\n        onChange: e => setCharClass(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: level,\n        onChange: e => setLevel(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(CharacterForm, \"7MNwLaa4YndRqwrElliRNMrDWo0=\");\n_c = CharacterForm;\nexport default CharacterForm;\n\n// import React, { useState } from 'react';\n\n// function CharacterForm({ onCharacterCreated }) {\n//     const [name, setName] = useState('');\n//     const [race, setRace] = useState('');\n//     const [charClass, setCharClass] = useState('');\n//     const [level, setLevel] = useState('');\n//     const [username, setUsername] = useState(''); // Assuming you have the username stored somewhere\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await fetch('http://localhost:3000/api/characters/create', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({ name, race, charClass, level, username }),\n//             });\n\n//             if (response.ok) {\n//                 const character = await response.json();\n//                 onCharacterCreated(character);\n//             } else {\n//                 console.error('Error:', await response.json());\n//             }\n//         } catch (error) {\n//             console.error('Error:', error);\n//         }\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Character Name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Race\"\n//                 value={race}\n//                 onChange={(e) => setRace(e.target.value)}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Class\"\n//                 value={charClass}\n//                 onChange={(e) => setCharClass(e.target.value)}\n//                 required\n//             />\n//             <input\n//                 type=\"number\"\n//                 placeholder=\"Level\"\n//                 value={level}\n//                 onChange={(e) => setLevel(e.target.value)}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Username\"\n//                 value={username}\n//                 onChange={(e) => setUsername(e.target.value)}\n//                 required\n//             />\n//             <button type=\"submit\">Create Character</button>\n//         </form>\n//     );\n// }\n\n// export default CharacterForm;\nvar _c;\n$RefreshReg$(_c, \"CharacterForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CharacterForm","onCharacterCreated","_s","name","setName","race","setRace","charClass","setCharClass","level","setLevel","handleSubmit","event","preventDefault","characterData","parseInt","username","response","fetch","method","headers","body","JSON","stringify","ok","newCharacter","json","console","log","error","status","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/lebea/OneDrive/Desktop/gitt/java/DND/Frontend/src/components/CharacterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction CharacterForm({ onCharacterCreated }) {\r\n  const [name, setName] = useState('');\r\n  const [race, setRace] = useState('');\r\n  const [charClass, setCharClass] = useState('');\r\n  const [level, setLevel] = useState(1);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const characterData = {\r\n      name: name,\r\n      race: race,\r\n      charClass: charClass,\r\n      level: parseInt(level),\r\n      username: \"testUser\" // You can replace this with a dynamic username later\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8081/api/characters/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(characterData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const newCharacter = await response.json();\r\n        console.log('Character created:', newCharacter);\r\n        if (onCharacterCreated) {\r\n          onCharacterCreated(newCharacter); // Callback to update character list if necessary\r\n        }\r\n      } else {\r\n        console.error('Failed to create character:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating character:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Race:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={race}\r\n          onChange={(e) => setRace(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Class:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={charClass}\r\n          onChange={(e) => setCharClass(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Level:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={level}\r\n          onChange={(e) => setLevel(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Create Character</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CharacterForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// function CharacterForm({ onCharacterCreated }) {\r\n//     const [name, setName] = useState('');\r\n//     const [race, setRace] = useState('');\r\n//     const [charClass, setCharClass] = useState('');\r\n//     const [level, setLevel] = useState('');\r\n//     const [username, setUsername] = useState(''); // Assuming you have the username stored somewhere\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const response = await fetch('http://localhost:3000/api/characters/create', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify({ name, race, charClass, level, username }),\r\n//             });\r\n\r\n//             if (response.ok) {\r\n//                 const character = await response.json();\r\n//                 onCharacterCreated(character);\r\n//             } else {\r\n//                 console.error('Error:', await response.json());\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error:', error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Character Name\"\r\n//                 value={name}\r\n//                 onChange={(e) => setName(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Race\"\r\n//                 value={race}\r\n//                 onChange={(e) => setRace(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Class\"\r\n//                 value={charClass}\r\n//                 onChange={(e) => setCharClass(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <input\r\n//                 type=\"number\"\r\n//                 placeholder=\"Level\"\r\n//                 value={level}\r\n//                 onChange={(e) => setLevel(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Username\"\r\n//                 value={username}\r\n//                 onChange={(e) => setUsername(e.target.value)}\r\n//                 required\r\n//             />\r\n//             <button type=\"submit\">Create Character</button>\r\n//         </form>\r\n//     );\r\n// }\r\n\r\n// export default CharacterForm;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}